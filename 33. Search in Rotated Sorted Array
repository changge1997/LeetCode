
// 关于binary search的循环终止条件 和更新low/high的方法：
// https://leetcode.com/explore/learn/card/binary-search/126/template-ii/937/

// Time: O(logN)
// Space: O(1)
class Solution {
    public int search(int[] nums, int target) {
        int n = nums.length;
        int low = 0;
        int high = n - 1;
        
        // Find the min
        while (low < high) {
            int mid = low + (high - low)/2;
            if (nums[mid] > nums[high]) low = mid + 1;
            else high = mid;
        }
        int pivot = low;
        low = 0;
        high = n - 1;
        while (low <= high) {
            int mid = low + (high - low)/2;
            int rotatedMid = (mid + pivot)%n;
            if (nums[rotatedMid] == target) return rotatedMid;
            if (nums[rotatedMid] < target) low = mid + 1;
            else high = mid - 1;
        }
        return -1;
    }
}
