
// Time: O(n)
// Space: O(n)

// Record the sign before '()' in stack
// Update the sign before the number using recorded sign
// Update the sum when we come up with '+'/'-' (add the number(with sign) before '+'/'-')

class Solution {
    public int calculate(String s) {
        Stack<Integer> stack = new Stack<>();
        int num = 0;
        int sign = 1;
        int sum = 0;
        stack.push(sign);
        
        for (char c: s.toCharArray()) {
            if (c == ' ') continue;
            if (Character.isDigit(c)) {
                num = num * 10 + c - '0';
            } else if (c == '(') {
                stack. push(sign);
            } else if (c == ')') {
                stack.pop();
            } else {
                sum += sign * num;
                num = 0;
                sign = stack.peek() * (c == '+'? 1: -1);
            }
        }
        sum += sign * num;
        return sum;
    }
}
